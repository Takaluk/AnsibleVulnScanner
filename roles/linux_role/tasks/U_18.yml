- name: /etc/hosts.allow 파일이 존재하는지 확인
  stat:
    path: /etc/hosts.allow
  register: hosts_allow_stat
  ignore_errors: yes

- name: /etc/hosts.deny 파일이 존재하는지 확인
  stat:
    path: /etc/hosts.deny
  register: hosts_deny_stat
  ignore_errors: yes

- name: /etc/hosts.allow 파일의 내용을 확인
  shell: cat /etc/hosts.allow
  register: hosts_allow_content
  when: hosts_allow_stat.stat.exists
  failed_when: false
  ignore_errors: yes

- name: /etc/hosts.deny 파일의 내용을 확인
  shell: cat /etc/hosts.deny
  register: hosts_deny_content
  when: hosts_deny_stat.stat.exists
  failed_when: false
  ignore_errors: yes

- name: iptables 설정 확인
  shell: iptables -nL
  register: iptables_settings
  failed_when: false
  ignore_errors: yes

- name: firewall-cmd가 사용 가능한 경우 firewall-cmd 설정 확인
  shell: firewall-cmd --list-all
  register: firewall_cmd_settings
  ignore_errors: yes
  failed_when: false

- name: IP 및 포트 제한 검사 상태를 기본값으로 false로 초기화 (기본적으로 안전하지 않음)
  set_fact:
    ip_port_restriction_check: false
  ignore_errors: yes

- name: IP 및 포트 제한이 올바르게 구성된 경우 상태를 true로 설정
  set_fact:
    ip_port_restriction_check: true
  when: >
    (
      (hosts_allow_content.stdout is defined and hosts_allow_content.stdout != "") or
      (hosts_deny_content.stdout is defined and hosts_deny_content.stdout != "")
    ) or
    (
      iptables_settings.stdout is defined and
      (iptables_settings.stdout.find('ACCEPT') != -1 or iptables_settings.stdout.find('REJECT') != -1)
    ) or
    (
      firewall_cmd_settings.stdout is defined and
      firewall_cmd_settings.stdout.find('ports:') != -1
    )
  ignore_errors: yes

- name: IP 및 포트 제한 검사 결과를 기반으로 scan_results 설정
  set_fact:
    scan_results: "{{ scan_results | combine({
                      'U_18': ip_port_restriction_check | bool
                    }) }}"
  ignore_errors: yes

